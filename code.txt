import numpy as np

class SmaCross(backtrader.Strategy):
    def __init__(self, period_1 = 5, period_2 = 8, reverse : bool = False):
        sma1, sma2 = bt.ind.SMA(period = period_1), bt.ind.SMA(period = period_2)        
        self.crossover = bt.ind.CrossOver(sma1, sma2)        

        sig_condition = {
            (0, 1): 'Long', (0, -1): 'Short', (0, 0): 'Semi-Long',
            (1, -1): 'Short', (1, 0): 'Semi-Short',
            (-1, 1): 'Long', (-1, 0): 'Semi-Long'
        }
        if reverse:
            self.sig_condition = {}

            for cond, sig in sig_condition.items():
                pos, cross = cond
                self.sig_condition[(-pos, -cross)] = sig
        else:
            self.sig_condition = sig_condition
        
    def next(self):
        pos = np.sign(self.position.size) if self.position else 0
        cross = np.sign(self.crossover)[0]

        signal = self.sig_condition[(pos, cross)] if (pos, cross) in self.sig_condition.keys() else None
        
        if pos == 0:
            if cross > 0:
                self.buy(signal = signal)
            elif self.crossover < 0:
                self.sell(signal = signal)
            else:
                self.buy(signal = signal)
        elif self.position.size > 0:
            if self.crossover < 0:
                self.close(signal = signal)
            elif self.crossover == 0:
                self.close(signal = signal)
        elif self.position.size < 0:
            if self.crossover > 0:
                self.close(signal = signal)
            elif self.crossover == 0:
                self.close(signal = signal)
